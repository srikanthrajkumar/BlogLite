openapi: 3.0.3
info:
  title: BlogLite by Srikanth Rajkumar
  version: 1.0.0
  
servers:
  - url: http://127.0.0.1:5000/
  - url: http://localhost:5000/
tags:
  - name: User
    description: CRUD for User
  - name: Article
    description: CRUD for Articles
    
paths:
  /users:
    post:
      tags:
        - User
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'

      responses:
        '201':
          description: The created user
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  password:
                    type: string
                  firstname:
                    type: string
                  lastname:
                    type: string
                required:
                  - username
                  - password
                  - firstname
                  - lastname
        '400':
          description: Not Found
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/UserError'
                
  /users/{username}:
    get:
      tags:
        - User
      summary: Retrieve a specific user
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
            format: byte
      responses:
        '200':
          description: The requested user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Not Found
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/UserError'
    put:
      tags:
        - User
      summary: Update a specific user
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: The updated user
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  password:
                    type: string
                  firstname:
                    type: string
                  lastname:
                    type: string
                required:
                  - username
                  - password
                  - firstname
                  - lastname
        '400':
          description: Not Found
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/UserError' 
    delete:
      tags:
        - User
      summary: Delete a specific user
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The user has been deleted
          
  /blog:
    post:
      tags:
        - Article
      summary: Create a new blog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Article'
      responses:
        '201':
          description: The created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
                
  /blog/{id}:
    get:
      tags:
        - Article
      summary: Retrieve a specific blog
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The requested blog
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
    put:
      tags:
        - Article
      summary: Update a specific blog
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Article'
      responses:
        '200':
          description: The updated blog
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
    delete:
      tags:
        - Article
      summary: Delete a specific blog
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: The blog has been deleted
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        password:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        image_file:
          type: string
      required:
        - id
        - username
        - password
        - firstname
        - lastname
        - image_file
        
    Article:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        content:
          type: string
        date_posted:
          type: string
          format: date-time
        image_file:
          type: string
      required:
        - id
        - username
        - password
        - firstname
        - lastname
        - image_file
        
    UserError:
      type: object
      properties: 
        Error:
          type: string
          example: "Something went wrong"